@using Filters = Application.Constants.FilterOptionNames.ExerciseResults.ForExercise
@using Orders = Application.Constants.OrderOptionNames.ExerciseResults.ForExercise
@model IEnumerable<ExerciseResultViewModel>

@{
    ViewBag.Title = "Results";
    ViewBag.IsResultsForExercise = true;
}

<div class="container-fluid text-center justify-content-center">
    <h2>Results from exercise @(ViewBag.Exercise?.Name)</h2>

    <form class="d-flex justify-content-end" method="get">
        <div class="input-group mb-1">
            <button class="btn btn-outline-primary rounded-start-5 me-1" onclick="this.closest('form').submit()">Order 
                @await Html.PartialAsync("Partials/DefaultOrderFormPartialView", Orders.OwnerName)
            </button>
            
            <label for="filter-by-name-input"></label>
            <input id="filter-by-name-input" class="form-control me-1" name="@Filters.OwnerName.AsFilterName()" value="@ViewData[Filters.OwnerName.AsFilterName()]" placeholder="search"/>
            <button type="submit" class="btn btn-primary rounded-end-5"><img style="width: 2em;height: 2em;" src="/img/icons/search.svg" alt="Search"/></button>
        </div>
    </form>
    
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">
        @foreach (var result in Model)
        {
            await Html.RenderPartialAsync("PartialViews/ResultsCardPartialView", result);
        }
    </div>
</div>


