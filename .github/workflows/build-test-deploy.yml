name: Build, Test, and Deploy ASP.Net Core app

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
  
        - name: Set up .NET Core
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '8.x'
            include-prerelease: true
  
        - name: Restore dependencies
          run: dotnet restore
          
        - name: Build
          run: dotnet build --no-restore
          
        - name: Test
          run: dotnet test --no-build --verbosity normal

  build-production:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Restore dependencies
        run: dotnet restore src/WebUI/WebUI.csproj

      - name: Build with dotnet
        run: dotnet build src/WebUI/WebUI.csproj --configuration Release --no-restore

      - name: dotnet publish
        run: dotnet publish src/WebUI/WebUI.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for test and deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: [test, build-production]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'training-tools'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_84482AE746004F7BA92B08B2C841F1D9 }}

          
  deploy-to-somee:
    runs-on: ubuntu-latest
    needs: [test, build-production]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      - name: FTP Deployer
        uses: sand4rt/ftp-deployer@v1.8
        with:
          sftp: false
          host: ${{ secrets.SOMEE_FTP_SERVER }}
          username: ${{ secrets.SOMEE_FTP_USERNAME }}
          password: ${{ secrets.SOMEE_FTP_PASSWORD }}
          remote_folder: ${{ secrets.SOMEE_FTP_REMOTE_DIR }}
          local_folder: ./
          cleanup: false
          exclude: '["**/appsettings.Production.json"]'
          passive: true
