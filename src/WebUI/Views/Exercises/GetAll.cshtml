@using WebUI.Models.Group
@using Filters = Application.Constants.FilterOptionNames.Exercise
@using Orders = Application.Constants.OrderOptionNames.Exercise
@model IEnumerable<WebUI.Models.Exercise.ExerciseViewModel>

@{
    ViewBag.Title = "Exercises";

    var isUserAuthenticated = User.Identity?.IsAuthenticated ?? false;
    
    var isUserAdmin = User.IsInRole("Admin");
    var isUserRoot = User.IsInRole("Root");

    IEnumerable<GroupViewModel> availableGroups = ViewBag.AvailableGroups;
    
    ExerciseResult[] exerciseResults;
    if (ViewBag.UserResults is IEnumerable<ExerciseResult> eR) exerciseResults = eR.ToArray();
    else exerciseResults = new ExerciseResult[]{};
}

<div class="container">
    <h2 class="text-center">Exercises</h2>

    <form class="d-flex justify-content-end" method="get">
        <div class="input-group mb-1">
            <label for="filter-by-group-input" hidden></label>
            
            @{ var currentFilterGroup = ViewData[Filters.Group.AsFilterName()] as string;}
            <select id="filter-by-group-input" class="form-select rounded-start-5 me-1" style="max-width: 30%;" name="@Filters.Group.AsFilterName()">
                <option value="">Not selected</option>
                @foreach (var group in availableGroups)
                {
                    if (group.Id.ToString() == currentFilterGroup)
                    {
                        <option value="@group.Id" selected>@group.Name</option>
                    }
                    else
                    {
                        <option value="@group.Id">@group.Name</option>
                    }
                }
            </select>
            
            <label for="filter-by-name-input" hidden></label>
            <input id="filter-by-name-input" class="form-control me-1" name="@Filters.Name.AsFilterName()" value="@ViewData[Filters.Name.AsFilterName()]" placeholder="search"/>
            
            <button type="submit" class="btn btn-primary rounded-end-5"><img style="width: 2em;height: 2em;" src="/img/icons/search.svg" alt="Search"/></button>
            
            <input name="order" value="@(ViewData["current_order"] ?? "")" hidden/>
            <input name="order_by" value="@(ViewData["order_by"])" hidden/>
        </div>
    </form>

    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th class="col-3 fs-5">
                <form method="get" onclick="this.submit()" class="cursor-pointer non-selectable">
                    Exercise name
                    @{
                        await Html.RenderPartialAsync("Partials/DefaultOrderFormPartialView", Orders.Name);
                    }

                    <input name="@Filters.Name.AsFilterName()" value="@ViewData[Filters.Name.AsFilterName()]" hidden/>
                    <input name="@Filters.Group.AsFilterName()" value="@ViewData[Filters.Group.AsFilterName()]" hidden/>
                </form>
            </th>
            <th class="col-2 fs-5">
                <form method="get" onclick="this.submit()" class="cursor-pointer non-selectable">
                    Group name
                    @{
                        await Html.RenderPartialAsync("Partials/DefaultOrderFormPartialView", Orders.GroupName);
                    }
                    
                    <input name="@Filters.Name.AsFilterName()" value="@ViewData[Filters.Name.AsFilterName()]" hidden/>
                    <input name="@Filters.Group.AsFilterName()" value="@ViewData[Filters.Group.AsFilterName()]" hidden/>
                </form>
            </th>
            @if (isUserAuthenticated)
            {
                <th class="col-1 fs-5">Results status</th>
            }
        </tr>
        </thead>
        <tbody>
        @foreach (var exercise in Model)
        {
            <tr>
                <td>
                    <a class="link-dark fs-5" asp-controller="Exercises" asp-action="Get" asp-route-exerciseId="@exercise.Id">@exercise.Name</a>
                </td>
                <td>
                    <span class="fs-5">@exercise.Group.Name</span>
                </td>
                @if (isUserAuthenticated)
                {
                    <td>
                        @if (exerciseResults.FirstOrDefault(r => r.Exercise.Id == exercise.Id) is null)
                        {
                            <a class="btn btn-success" asp-controller="ExerciseResults" asp-action="CreateResult" asp-route-exerciseId="@exercise.Id" asp-route-returnUrl="/exercises">Create Results</a>
                        }
                        else
                        {
                            <a class="btn btn-primary" asp-controller="ExerciseResults" asp-action="GetUserResults" asp-route-f_full-name="@exercise.Group.Name/@exercise.Name">To Results</a>
                        }
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>

    @if (isUserAdmin || isUserRoot)
    {
        <a class="btn btn-success w-100 d-block" asp-controller="Exercises" asp-action="Create">Add new exercise</a>
    }
</div>