@using Filters = Application.Constants.FilterOptionNames.User
@using Orders = Application.Constants.OrderOptionNames.User
@model IEnumerable<WebUI.Models.User.UserInfoViewModel>

@{
    ViewBag.Title = "Users";
}

<div class="container">
    <h2 class="text-center">Users</h2>

    @if (Context.User.IsInRole(nameof(Role.Admin)) || Context.User.IsInRole(nameof(Role.Root)))
    {
        <div class="row mb-3">
            <a class="col d-block w-75 btn btn-outline-success me-2" asp-controller="Users" asp-action="Create">Create new User</a>
            
            <a class="col-3 btn btn-primary" asp-controller="Users" asp-action="GetAllAsCsv">Download as CSV</a>
        </div>
    }

    <form class="d-flex justify-content-end" method="get" onsubmit="addQueryParametersFromForm(event)">
        <div class="input-group mb-1">
            <label for="filter-by-name-input" hidden></label>
            <input id="filter-by-name-input" class="form-control rounded-start-5 me-1" name="@Filters.Name.AsFilterName()" value="@ViewData[Filters.Name.AsFilterName()]" placeholder="search"/>
            
            <label for="filter-by-roles-input" hidden></label>
            @{ var currentFilterRole = ViewData[Filters.Role.AsFilterName()] as string; }
            <select id="filter-by-roles-input" class="form-select  me-1" style="max-width: 20%;" name="@Filters.Role.AsFilterName()">
                <option value="">Not selected</option>
                @foreach (var role in Enum.GetNames<Role>())
                {
                    if (role == Role.Root.ToString())
                    {
                        // empty
                    }
                    else if (string.Equals(role, currentFilterRole, StringComparison.CurrentCultureIgnoreCase))
                    {
                        <option value="@role.ToLower()" selected>@role</option>
                    }
                    else
                    {
                        <option value="@role.ToLower()">@role</option>
                    }
                }
            </select>

            <label for="filter-by-friendship-state-input" hidden></label>
            @{ var currentFilterFriendshipState = ViewData[Filters.RelationshipsState.AsFilterName()] as string; }
            <select id="filter-by-friendship-state-input" class="form-select me-1" style="max-width: 20%;" name="@Filters.RelationshipsState.AsFilterName()">
                <option value="">Not selected</option>
                @foreach (var relationshipState in Enum.GetNames<RelationshipState>())
                {
                    if (string.Equals(relationshipState, currentFilterFriendshipState, StringComparison.CurrentCultureIgnoreCase))
                    {
                        <option value="@relationshipState.ToLower()" selected>@relationshipState</option>
                    }
                    else
                    {
                        <option value="@relationshipState.ToLower()">@relationshipState</option>
                    }
                }
            </select>

            <button type="submit" class="btn btn-primary rounded-end-5"><img style="width: 2em;height: 2em;" src="/img/icons/search.svg" alt="Search"/></button>
        </div>
    </form>

    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th class="col-3 fs-5">
                @await Html.PartialAsync("Partials/DefaultOrderFormPartialView", (Orders.Name, "Username"))
            </th>
            <th class="col-1 fs-5">
                @await Html.PartialAsync("Partials/DefaultOrderFormPartialView", (Orders.Role, "Role"))
            </th>
            <th class="col-1 fs-5">
                 @await Html.PartialAsync("Partials/DefaultOrderFormPartialView", (Orders.RelationshipsState, "Relationships"))
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var userInfo in Model)
        {
            <tr>
                <td>
                    <a class="col fs-5" asp-controller="Users" asp-action="Get" asp-route-userName="@userInfo.User.UserName">@userInfo.User.UserName</a>
                </td>
                <td>
                    @foreach (var role in userInfo.Roles)
                    {
                        await Html.RenderPartialAsync("Partials/UserRole", role);
                    }
                </td>
                <td>
                    @{
                        await Html.RenderPartialAsync("Partials/UsersRelationshipActions", (userInfo.RelationshipState, userInfo.User.UserName, Context.Request.Path.ToString()));
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

    @await Html.PartialAsync("Partials/DefaultPagingFormPartialView", ViewBag.UsersCount, ViewData)
</div>