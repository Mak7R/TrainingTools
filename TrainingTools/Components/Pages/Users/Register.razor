@page "/Register"

@rendermode InteractiveServer

@inject Linker Linker

<PageTitle>Register</PageTitle>

<div class="container-fluid">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">Register</li>
    </ol>
</div>

<div class="container">
    <div id="register-form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        <div class="form-group mb-3">
            <label for="register-name" class="control-label">Name: </label>
            <input id="register-name" name="Name" type="text" class="form-control" @bind="_registerUserModel.Name" required>
            <InvalidModelFormMessage BindingError="BindingError" ErrorParameter="@nameof(RegisterUserModel.Name)" />
        </div>
        <div class="form-group mb-3">
            <label for="register-email" class="control-label">Email: </label>
            <input id="register-email" name="Email" type="email" class="form-control" @bind="_registerUserModel.Email" required>
            <InvalidModelFormMessage BindingError="BindingError" ErrorParameter="@nameof(RegisterUserModel.Email)" />
        </div>
        <div class="form-group mb-3">
            <label for="register-password" class="control-label">Password: </label>
            <input id="register-password" name="Password" type="password" class="form-control" @bind="_registerUserModel.Password" required>
            <InvalidModelFormMessage BindingError="BindingError" ErrorParameter="@nameof(RegisterUserModel.Password)" />
        </div>
        <div class="form-group mb-3">
            <label for="register-confirm-password" class="control-label">Confirm password: </label>
            <input id="register-confirm-password" name="ConfirmPassword" type="password" class="form-control" @bind="_registerUserModel.ConfirmPassword" required>
            <InvalidModelFormMessage BindingError="BindingError" ErrorParameter="@nameof(RegisterUserModel.ConfirmPassword)" />
        </div>
        
        <div class="form-group">
            <button class="btn btn-primary" @onclick="SubmitRegister">Register</button>
        </div>
    </div>
</div>

@code {
    private readonly RegisterUserModel _registerUserModel = new()
    {
        Name = string.Empty,
        Email = string.Empty,
        Password = string.Empty,
        ConfirmPassword = string.Empty
    };
    private ModelStateErrorViewModel? BindingError { get; set; }

    private async Task SubmitRegister()
    {
        try
        {
            await (await Linker.RequestBuilder
                    .RequestToAction("Register", "Users")
                    .WithMethod(HttpMethod.Post)
                    .WithContent(_registerUserModel)
                    .WithCookies()
                    .Fetch())
                .LoadCookies()
                .OnSuccess(_ =>
                {
                    Linker.NavigateToAction("Home");
                    StateHasChanged();
                })
                .OnStatusCode(StatusCodes.Status400BadRequest, response =>
                {
                    BindingError = JsonSerializer.Deserialize<ModelStateErrorViewModel>(response.Content);
                    StateHasChanged();
                })
                .OnUnhandled(response =>
                {
                    Linker.NavigateToAction("Error", routeValues: new { response.StatusCode });
                })
                .WaitForHandleFinishedAsync();
        }
        catch (Exception e)
        {
            Linker.NavigateToAction("Error", routeValues: new {StatusCode = 0, e.Message});
        }
    }
}